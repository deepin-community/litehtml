liblitehtml.so.0 liblitehtml0 #MINVER#
* Build-Depends-Package: liblitehtml-dev libgumbo-dev
 (c++)"litehtml::background::background(litehtml::background const&)@Base" 0.5
 (c++)"litehtml::background::background()@Base" 0.5
 (c++)"litehtml::background::background(litehtml::background const&)@Base" 0.5
 (c++)"litehtml::background::background()@Base" 0.5
 (c++)"litehtml::background::operator=(litehtml::background const&)@Base" 0.5
 (c++)"litehtml::css_length::fromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)@Base" 0.5
 (c++)"litehtml::el_comment::get_text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::el_comment::set_data(char const*)@Base" 0.5
 (c++)"litehtml::el_comment::el_comment(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_comment::~el_comment()@Base" 0.5
 (c++)"litehtml::table_grid::is_rowspanned(int, int)@Base" 0.5
 (c++)"litehtml::table_grid::calc_rows_height(int, int)@Base" 0.5
 (c++)"litehtml::table_grid::calc_table_width(int, bool, int&, int&)@Base" 0.5
 (c++)"litehtml::table_grid::distribute_width(int, int, int)@Base" 0.5
 (c++)"litehtml::table_grid::distribute_width(int, int, int, litehtml::table_column_accessor*)@Base" 0.5
 (c++)"litehtml::table_grid::distribute_max_width(int, int, int)@Base" 0.5
 (c++)"litehtml::table_grid::distribute_min_width(int, int, int)@Base" 0.5
 (c++)"litehtml::table_grid::calc_vertical_positions(litehtml::margins&, litehtml::border_collapse, int)@Base" 0.5
 (c++)"litehtml::table_grid::calc_horizontal_positions(litehtml::margins&, litehtml::border_collapse, int)@Base" 0.5
 (c++)"litehtml::table_grid::cell(int, int)@Base" 0.5
 (c++)"litehtml::table_grid::clear()@Base" 0.5
 (c++)"litehtml::table_grid::finish()@Base" 0.5
 (c++)"litehtml::table_grid::add_cell(std::shared_ptr<litehtml::element>&)@Base" 0.5
 (c++)"litehtml::table_grid::begin_row(std::shared_ptr<litehtml::element>&)@Base" 0.5
 (c++)"litehtml::join_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::media_query::create_from_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::media_query::media_query(litehtml::media_query const&)@Base" 0.5
 (c++)"litehtml::media_query::media_query()@Base" 0.5
 (c++)"litehtml::media_query::media_query(litehtml::media_query const&)@Base" 0.5
 (c++)"litehtml::media_query::media_query()@Base" 0.5
 (c++)"litehtml::value_index(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, char)@Base" 0.5
 (c++)"litehtml::css_selector::calc_specificity()@Base" 0.5
 (c++)"litehtml::css_selector::parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::css_selector::~css_selector()@Base" 0.5
 (c++)"litehtml::g_def_colors@Base" 0.5
 (c++)"litehtml::split_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::t_strcasecmp(char const*, char const*)@Base" 0.6
 (c++|subst)"litehtml::t_strncasecmp(char const*, char const*, {c++:size_t})@Base" 0.6
 (c++)"litehtml::utf8_to_wchar::get_char()@Base" 0.5
 (c++)"litehtml::utf8_to_wchar::utf8_to_wchar(char const*)@Base" 0.5
 (c++)"litehtml::value_in_list(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)@Base" 0.5
 (c++)"litehtml::wchar_to_utf8::wchar_to_utf8(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)@Base" 0.6
 (c++)"litehtml::go_inside_table::select(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::url_path_append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::background_paint::background_paint(litehtml::background_paint const&)@Base" 0.5
 (c++)"litehtml::background_paint::background_paint()@Base" 0.5
 (c++)"litehtml::background_paint::background_paint(litehtml::background_paint const&)@Base" 0.5
 (c++)"litehtml::background_paint::background_paint()@Base" 0.5
 (c++)"litehtml::background_paint::~background_paint()@Base" 0.5
 (c++)"litehtml::background_paint::operator=(litehtml::background const&)@Base" 0.5
 (c++)"litehtml::go_inside_inline::select(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::media_query_list::create_from_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::media_query_list::apply_media_features(litehtml::media_features const&)@Base" 0.5
 (c++)"litehtml::url_path_resolve(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::css_border_radius::calc_percents(int, int)@Base" 0.5
 (c++|arch=i386)"litehtml::css_length::calc_percent(int) const@Base" 0.6
 (c++)"litehtml::elements_iterator::next(bool)@Base" 0.5
 (c++)"litehtml::elements_iterator::next_idx()@Base" 0.5
 (c++)"litehtml::elements_iterator::~elements_iterator()@Base" 0.5
 (c++)"litehtml::document_container::split_text(char const*, std::function<void (char const*)> const&, std::function<void (char const*)> const&)@Base" 0.6
 (c++|subst)"litehtml::find_close_bracket(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, {c++:size_t}, char, char)@Base" 0.5
 (c++)"litehtml::is_ascii_codepoint(char)@Base" 0.6
 (c++)"litehtml::url_path_base_name(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::table_rows_selector::select(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::css_element_selector::parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::css_element_selector::~css_element_selector()@Base" 0.5
 (c++)"litehtml::el_before_after_base::add_function(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::el_before_after_base::convert_escape[abi:cxx11](char const*)@Base" 0.6
 (c++)"litehtml::el_before_after_base::apply_stylesheet(litehtml::css const&)@Base" 0.5
 (c++)"litehtml::el_before_after_base::add_text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::el_before_after_base::add_style(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::el_before_after_base::el_before_after_base(std::shared_ptr<litehtml::document> const&, bool)@Base" 0.5
 (c++)"litehtml::el_before_after_base::~el_before_after_base()@Base" 0.5
 (c++)"litehtml::is_url_path_absolute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::table_cells_selector::select(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::css_attribute_selector::css_attribute_selector(litehtml::css_attribute_selector const&)@Base" 0.6
 (c++)"litehtml::css_attribute_selector::~css_attribute_selector()@Base" 0.5
 (c++)"litehtml::is_url_scheme_codepoint(char)@Base" 0.6
 (c++)"litehtml::url_path_directory_name(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::is_url_reserved_codepoint(char)@Base" 0.6
 (c++)"litehtml::table_column_accessor_width::get(litehtml::table_column&)@Base" 0.5
 (c++)"litehtml::table_column_accessor_max_width::get(litehtml::table_column&)@Base" 0.5
 (c++)"litehtml::table_column_accessor_min_width::get(litehtml::table_column&)@Base" 0.5
 (c++)"litehtml::css::parse_atrule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, std::shared_ptr<litehtml::document> const&, std::shared_ptr<litehtml::media_query_list> const&)@Base" 0.5
 (c++)"litehtml::css::parse_css_url(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::css::sort_selectors()@Base" 0.5
 (c++)"litehtml::css::parse_selectors(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<litehtml::media_query_list> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::css::parse_stylesheet(char const*, char const*, std::shared_ptr<litehtml::document> const&, std::shared_ptr<litehtml::media_query_list> const&)@Base" 0.5
 (c++)"litehtml::url::url(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::url::url(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::url::url(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::url::url(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::el_li::render(int, int, int, bool)@Base" 0.6
 (c++)"litehtml::el_li::el_li(std::shared_ptr<litehtml::document> const&)@Base" 0.6
 (c++)"litehtml::el_li::~el_li()@Base" 0.6
 (c++)"litehtml::el_td::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_td::el_td(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_td::~el_td()@Base" 0.5
 (c++)"litehtml::el_tr::get_inline_boxes(std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::el_tr::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_tr::el_tr(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_tr::~el_tr()@Base" 0.5
 (c++)"litehtml::lcase(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::style::subst_vars(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, litehtml::element const*)@Base" 0.6
 (c++)"litehtml::style::add_property(char const*, char const*, char const*, bool, litehtml::element const*)@Base" 0.6
 (c++)"litehtml::style::m_valid_values[abi:cxx11]@Base" 0.5
 (c++)"litehtml::style::parse_property(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, litehtml::element const*)@Base" 0.6
 (c++)"litehtml::style::remove_property(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)@Base" 0.5
 (c++)"litehtml::style::parse_short_font(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)@Base" 0.5
 (c++)"litehtml::style::parse_short_border(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)@Base" 0.5
 (c++)"litehtml::style::add_parsed_property(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)@Base" 0.5
 (c++)"litehtml::style::parse_short_background(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*, bool)@Base" 0.5
 (c++)"litehtml::style::parse(char const*, char const*, litehtml::element const*)@Base" 0.6
 (c++)"litehtml::style::combine(litehtml::style const&)@Base" 0.5
 (c++)"litehtml::style::style(litehtml::style const&)@Base" 0.5
 (c++)"litehtml::el_div::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_div::el_div(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_div::~el_div()@Base" 0.5
 (c++)"litehtml::context::load_master_stylesheet(char const*)@Base" 0.5
 (c++)"litehtml::el_base::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_base::el_base(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_base::~el_base()@Base" 0.5
 (c++)"litehtml::el_body::el_body(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_body::~el_body()@Base" 0.5
 (c++)"litehtml::el_font::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_font::el_font(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_font::~el_font()@Base" 0.5
 (c++)"litehtml::el_link::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_link::el_link(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_link::~el_link()@Base" 0.5
 (c++)"litehtml::el_para::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_para::el_para(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_para::~el_para()@Base" 0.5
 (c++)"litehtml::el_text::parse_styles(bool)@Base" 0.5
 (c++)"litehtml::el_text::get_base_line()@Base" 0.5
 (c++)"litehtml::el_text::get_content_size(litehtml::size&, int)@Base" 0.5
 (c++|subst)"litehtml::el_text::draw({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::el_text::get_font(litehtml::font_metrics*)@Base" 0.5
 (c++)"litehtml::el_text::get_text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::el_text::el_text(char const*, std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_text::~el_text()@Base" 0.5
 (c++)"litehtml::element::get_cursor()@Base" 0.5
 (c++)"litehtml::element::select_all(litehtml::css_selector const&)@Base" 0.5
 (c++)"litehtml::element::select_all(litehtml::css_selector const&, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&)@Base" 0.5
 (c++)"litehtml::element::select_all(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::element::select_one(litehtml::css_selector const&)@Base" 0.5
 (c++)"litehtml::element::select_one(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::element::appendChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::element::removeChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::element::set_tagName(char const*)@Base" 0.5
 (c++)"litehtml::element::find_sibling(std::shared_ptr<litehtml::element> const&, litehtml::css_selector const&, bool, bool*)@Base" 0.5
 (c++)"litehtml::element::parse_styles(bool)@Base" 0.5
 (c++)"litehtml::element::calc_outlines(int)@Base" 0.5
 (c++|subst)"litehtml::element::draw_children({c++:size_t}, int, int, litehtml::position const*, litehtml::draw_flag, int)@Base" 0.6
 (c++)"litehtml::element::find_ancestor(litehtml::css_selector const&, bool, bool*)@Base" 0.5
 (c++)"litehtml::element::get_base_line()@Base" 0.5
 (c++)"litehtml::element::get_line_left(int)@Base" 0.5
 (c++)"litehtml::element::on_lbutton_up()@Base" 0.5
 (c++)"litehtml::element::on_mouse_over()@Base" 0.5
 (c++)"litehtml::element::place_element(std::shared_ptr<litehtml::element> const&, int)@Base" 0.5
 (c++)"litehtml::element::render_inline(std::shared_ptr<litehtml::element> const&, int)@Base" 0.5
 (c++)"litehtml::element::set_css_width(litehtml::css_length&)@Base" 0.5
 (c++)"litehtml::element::update_floats(int, std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::element::add_positioned(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::element::clearRecursive()@Base" 0.5
 (c++)"litehtml::element::get_background(bool)@Base" 0.5
 (c++)"litehtml::element::get_line_right(int, int)@Base" 0.5
 (c++)"litehtml::element::get_redraw_box(litehtml::position&, int, int)@Base" 0.5
 (c++)"litehtml::element::on_mouse_leave()@Base" 0.5
 (c++)"litehtml::element::refresh_styles()@Base" 0.5
 (c++|subst)"litehtml::element::draw_background({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::element::is_point_inside(int, int)@Base" 0.5
 (c++)"litehtml::element::on_lbutton_down()@Base" 0.5
 (c++)"litehtml::element::apply_stylesheet(litehtml::css const&)@Base" 0.5
 (c++)"litehtml::element::fetch_positioned()@Base" 0.5
 (c++)"litehtml::element::get_content_size(litehtml::size&, int)@Base" 0.5
 (c++)"litehtml::element::get_inline_boxes(std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::element::parse_attributes()@Base" 0.5
 (c++)"litehtml::element::set_pseudo_class(char const*, bool)@Base" 0.5
 (c++)"litehtml::element::calc_auto_margins(int)@Base" 0.5
 (c++)"litehtml::element::render_positioned(litehtml::render_type)@Base" 0.5
 (c++)"litehtml::element::calc_document_size(litehtml::size&, int, int)@Base" 0.5
 (c++)"litehtml::element::find_next_line_top(int, int, int)@Base" 0.5
 (c++)"litehtml::element::get_child_by_point(int, int, int, int, litehtml::draw_flag, int)@Base" 0.5
 (c++)"litehtml::element::find_styles_changes(std::vector<litehtml::position, std::allocator<litehtml::position> >&, int, int)@Base" 0.5
 (c++)"litehtml::element::get_line_left_right(int, int, int&, int&)@Base" 0.5
 (c++)"litehtml::element::apply_relative_shift(int)@Base" 0.5
 (c++)"litehtml::element::apply_vertical_align()@Base" 0.5
 (c++)"litehtml::element::get_element_by_point(int, int, int, int)@Base" 0.5
 (c++)"litehtml::element::is_last_child_inline(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++|subst)"litehtml::element::draw_stacking_context({c++:size_t}, int, int, litehtml::position const*, bool)@Base" 0.6
 (c++)"litehtml::element::find_adjacent_sibling(std::shared_ptr<litehtml::element> const&, litehtml::css_selector const&, bool, bool*)@Base" 0.5
 (c++)"litehtml::element::get_inline_shift_left()@Base" 0.5
 (c++)"litehtml::element::get_inline_shift_right()@Base" 0.5
 (c++|subst)"litehtml::element::draw({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::element::init()@Base" 0.5
 (c++)"litehtml::element::render(int, int, int, bool)@Base" 0.5
 (c++)"litehtml::element::select(litehtml::css_selector const&, bool)@Base" 0.5
 (c++)"litehtml::element::select(litehtml::css_element_selector const&, bool)@Base" 0.5
 (c++)"litehtml::element::get_font(litehtml::font_metrics*)@Base" 0.5
 (c++)"litehtml::element::get_text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::element::on_click()@Base" 0.5
 (c++)"litehtml::element::set_attr(char const*, char const*)@Base" 0.5
 (c++)"litehtml::element::set_data(char const*)@Base" 0.5
 (c++)"litehtml::element::add_float(std::shared_ptr<litehtml::element> const&, int, int)@Base" 0.5
 (c++)"litehtml::element::add_style(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::element::get_color(char const*, bool, litehtml::web_color const&)@Base" 0.5
 (c++)"litehtml::element::init_font()@Base" 0.5
 (c++)"litehtml::element::set_class(char const*, bool)@Base" 0.5
 (c++)"litehtml::element::element(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::element::~element()@Base" 0.5
 (c++)"litehtml::num_cvt::to_greek_lower[abi:cxx11](int)@Base" 0.6
 (c++)"litehtml::num_cvt::to_latin_lower[abi:cxx11](int)@Base" 0.6
 (c++)"litehtml::num_cvt::to_latin_upper[abi:cxx11](int)@Base" 0.6
 (c++)"litehtml::num_cvt::to_roman_lower[abi:cxx11](int)@Base" 0.6
 (c++)"litehtml::num_cvt::to_roman_upper[abi:cxx11](int)@Base" 0.6
 (c++)"litehtml::resolve(litehtml::url const&, litehtml::url const&)@Base" 0.6
 (c++)"litehtml::css_text::~css_text()@Base" 0.5
 (c++)"litehtml::document::create_node(void*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&, bool)@Base" 0.6
 (c++)"litehtml::document::lang_changed()@Base" 0.5
 (c++)"litehtml::document::add_fixed_box(litehtml::position const&)@Base" 0.5
 (c++)"litehtml::document::media_changed()@Base" 0.5
 (c++)"litehtml::document::on_lbutton_up(int, int, int, int, std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::document::on_mouse_over(int, int, int, int, std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::document::add_media_list(std::shared_ptr<litehtml::media_query_list> const&)@Base" 0.6
 (c++)"litehtml::document::add_stylesheet(char const*, char const*, char const*)@Base" 0.5
 (c++)"litehtml::document::createFromUTF8(char const*, litehtml::document_container*, litehtml::context*, litehtml::css*)@Base" 0.5
 (c++)"litehtml::document::create_element(char const*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)@Base" 0.5
 (c++)"litehtml::document::on_mouse_leave(std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::document::get_fixed_boxes(std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::document::on_lbutton_down(int, int, int, int, std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::document::createFromString(char const*, litehtml::document_container*, litehtml::context*, litehtml::css*)@Base" 0.5
 (c++)"litehtml::document::fix_table_parent(std::shared_ptr<litehtml::element>&, litehtml::style_display, char const*)@Base" 0.5
 (c++)"litehtml::document::fix_tables_layout()@Base" 0.5
 (c++)"litehtml::document::fix_table_children(std::shared_ptr<litehtml::element>&, litehtml::style_display, char const*)@Base" 0.5
 (c++)"litehtml::document::update_media_lists(litehtml::media_features const&)@Base" 0.5
 (c++)"litehtml::document::append_children_from_utf8(litehtml::element&, char const*)@Base" 0.6
 (c++)"litehtml::document::append_children_from_string(litehtml::element&, char const*)@Base" 0.6
 (c++|subst)"litehtml::document::draw({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::document::render(int, litehtml::render_type)@Base" 0.5
 (c++)"litehtml::document::add_font(char const*, int, char const*, char const*, char const*, litehtml::font_metrics*)@Base" 0.5
 (c++)"litehtml::document::get_font(char const*, int, char const*, char const*, char const*, litehtml::font_metrics*)@Base" 0.5
 (c++)"litehtml::document::document(litehtml::document_container*, litehtml::context*)@Base" 0.5
 (c++)"litehtml::document::~document()@Base" 0.5
 (c++)"litehtml::el_after::~el_after()@Base" 0.5
 (c++)"litehtml::el_break::el_break(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_break::~el_break()@Base" 0.5
 (c++)"litehtml::el_cdata::get_text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::el_cdata::set_data(char const*)@Base" 0.5
 (c++)"litehtml::el_cdata::el_cdata(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_cdata::~el_cdata()@Base" 0.5
 (c++)"litehtml::el_image::parse_styles(bool)@Base" 0.5
 (c++)"litehtml::el_image::calc_max_height(int)@Base" 0.6
 (c++)"litehtml::el_image::get_content_size(litehtml::size&, int)@Base" 0.5
 (c++)"litehtml::el_image::parse_attributes()@Base" 0.5
 (c++|subst)"litehtml::el_image::draw({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::el_image::render(int, int, int, bool)@Base" 0.5
 (c++)"litehtml::el_image::el_image(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_image::~el_image()@Base" 0.5
 (c++)"litehtml::el_space::el_space(char const*, std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_space::~el_space()@Base" 0.5
 (c++)"litehtml::el_style::appendChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::el_style::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_style::el_style(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_style::~el_style()@Base" 0.5
 (c++)"litehtml::el_table::appendChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::el_table::parse_styles(bool)@Base" 0.5
 (c++)"litehtml::el_table::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_table::el_table(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_table::~el_table()@Base" 0.5
 (c++)"litehtml::el_title::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_title::el_title(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_title::~el_title()@Base" 0.5
 (c++)"litehtml::html_tag::get_cursor()@Base" 0.5
 (c++)"litehtml::html_tag::render_box(int, int, int, bool)@Base" 0.5
 (c++)"litehtml::html_tag::select_all(litehtml::css_selector const&)@Base" 0.5
 (c++)"litehtml::html_tag::select_all(litehtml::css_selector const&, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&)@Base" 0.5
 (c++)"litehtml::html_tag::select_all(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::html_tag::select_one(litehtml::css_selector const&)@Base" 0.5
 (c++)"litehtml::html_tag::select_one(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++)"litehtml::html_tag::appendChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::html_tag::removeChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::html_tag::set_tagName(char const*)@Base" 0.5
 (c++)"litehtml::html_tag::find_sibling(std::shared_ptr<litehtml::element> const&, litehtml::css_selector const&, bool, bool*)@Base" 0.5
 (c++)"litehtml::html_tag::parse_styles(bool)@Base" 0.5
 (c++)"litehtml::html_tag::render_table(int, int, int, bool)@Base" 0.5
 (c++)"litehtml::html_tag::calc_outlines(int)@Base" 0.5
 (c++|subst)"litehtml::html_tag::draw_children({c++:size_t}, int, int, litehtml::position const*, litehtml::draw_flag, int)@Base" 0.6
 (c++)"litehtml::html_tag::find_ancestor(litehtml::css_selector const&, bool, bool*)@Base" 0.5
 (c++)"litehtml::html_tag::get_base_line()@Base" 0.5
 (c++)"litehtml::html_tag::get_line_left(int)@Base" 0.5
 (c++)"litehtml::html_tag::on_lbutton_up()@Base" 0.5
 (c++)"litehtml::html_tag::on_mouse_over()@Base" 0.5
 (c++)"litehtml::html_tag::place_element(std::shared_ptr<litehtml::element> const&, int)@Base" 0.5
 (c++)"litehtml::html_tag::render_inline(std::shared_ptr<litehtml::element> const&, int)@Base" 0.5
 (c++)"litehtml::html_tag::set_css_width(litehtml::css_length&)@Base" 0.5
 (c++)"litehtml::html_tag::update_floats(int, std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::html_tag::add_positioned(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::html_tag::clearRecursive()@Base" 0.5
 (c++)"litehtml::html_tag::fix_line_width(int, litehtml::element_float)@Base" 0.5
 (c++)"litehtml::html_tag::get_background(bool)@Base" 0.5
 (c++)"litehtml::html_tag::get_line_right(int, int)@Base" 0.5
 (c++)"litehtml::html_tag::get_redraw_box(litehtml::position&, int, int)@Base" 0.5
 (c++)"litehtml::html_tag::on_mouse_leave()@Base" 0.5
 (c++)"litehtml::html_tag::refresh_styles()@Base" 0.5
 (c++|subst)"litehtml::html_tag::draw_background({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::html_tag::finish_last_box(bool)@Base" 0.5
 (c++)"litehtml::html_tag::on_lbutton_down()@Base" 0.5
 (c++)"litehtml::html_tag::apply_stylesheet(litehtml::css const&)@Base" 0.5
 (c++|subst)"litehtml::html_tag::draw_list_marker({c++:size_t}, litehtml::position const&)@Base" 0.6
 (c++)"litehtml::html_tag::fetch_positioned()@Base" 0.5
 (c++)"litehtml::html_tag::get_content_size(litehtml::size&, int)@Base" 0.5
 (c++)"litehtml::html_tag::get_inline_boxes(std::vector<litehtml::position, std::allocator<litehtml::position> >&)@Base" 0.5
 (c++)"litehtml::html_tag::parse_attributes()@Base" 0.5
 (c++)"litehtml::html_tag::parse_background()@Base" 0.5
 (c++)"litehtml::html_tag::set_pseudo_class(char const*, bool)@Base" 0.5
 (c++)"litehtml::html_tag::calc_auto_margins(int)@Base" 0.5
 (c++|subst)"litehtml::html_tag::draw_children_box({c++:size_t}, int, int, litehtml::position const*, litehtml::draw_flag, int)@Base" 0.6
 (c++)"litehtml::html_tag::get_element_after()@Base" 0.5
 (c++)"litehtml::html_tag::render_positioned(litehtml::render_type)@Base" 0.5
 (c++)"litehtml::html_tag::calc_document_size(litehtml::size&, int, int)@Base" 0.5
 (c++)"litehtml::html_tag::find_next_line_top(int, int, int)@Base" 0.5
 (c++)"litehtml::html_tag::get_child_by_point(int, int, int, int, litehtml::draw_flag, int)@Base" 0.5
 (c++)"litehtml::html_tag::get_element_before()@Base" 0.5
 (c++|subst)"litehtml::html_tag::draw_children_table({c++:size_t}, int, int, litehtml::position const*, litehtml::draw_flag, int)@Base" 0.6
 (c++)"litehtml::html_tag::find_styles_changes(std::vector<litehtml::position, std::allocator<litehtml::position> >&, int, int)@Base" 0.5
 (c++)"litehtml::html_tag::get_line_left_right(int, int, int&, int&)@Base" 0.5
 (c++)"litehtml::html_tag::remove_before_after()@Base" 0.5
 (c++)"litehtml::html_tag::apply_vertical_align()@Base" 0.5
 (c++)"litehtml::html_tag::get_element_by_point(int, int, int, int)@Base" 0.5
 (c++)"litehtml::html_tag::get_list_marker_text[abi:cxx11](int)@Base" 0.6
 (c++)"litehtml::html_tag::is_last_child_inline(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++|subst)"litehtml::html_tag::draw_stacking_context({c++:size_t}, int, int, litehtml::position const*, bool)@Base" 0.6
 (c++)"litehtml::html_tag::find_adjacent_sibling(std::shared_ptr<litehtml::element> const&, litehtml::css_selector const&, bool, bool*)@Base" 0.5
 (c++)"litehtml::html_tag::init_background_paint(litehtml::position, litehtml::background_paint&, litehtml::background const*)@Base" 0.5
 (c++)"litehtml::html_tag::parse_nth_child_params(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&, int&)@Base" 0.6
 (c++|subst)"litehtml::html_tag::draw({c++:size_t}, int, int, litehtml::position const*)@Base" 0.6
 (c++)"litehtml::html_tag::init()@Base" 0.5
 (c++)"litehtml::html_tag::render(int, int, int, bool)@Base" 0.5
 (c++)"litehtml::html_tag::select(litehtml::css_selector const&, bool)@Base" 0.5
 (c++)"litehtml::html_tag::select(litehtml::css_element_selector const&, bool)@Base" 0.5
 (c++)"litehtml::html_tag::new_box(std::shared_ptr<litehtml::element> const&, int, litehtml::line_context&)@Base" 0.5
 (c++)"litehtml::html_tag::get_font(litehtml::font_metrics*)@Base" 0.5
 (c++)"litehtml::html_tag::get_text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 0.5
 (c++)"litehtml::html_tag::on_click()@Base" 0.5
 (c++)"litehtml::html_tag::set_attr(char const*, char const*)@Base" 0.5
 (c++)"litehtml::html_tag::set_data(char const*)@Base" 0.5
 (c++)"litehtml::html_tag::add_float(std::shared_ptr<litehtml::element> const&, int, int)@Base" 0.5
 (c++)"litehtml::html_tag::add_style(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.6
 (c++)"litehtml::html_tag::init_font()@Base" 0.5
 (c++)"litehtml::html_tag::set_class(char const*, bool)@Base" 0.5
 (c++)"litehtml::html_tag::html_tag(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::html_tag::~html_tag()@Base" 0.5
 (c++)"litehtml::line_box::add_element(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::line_box::get_elements(std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&)@Base" 0.5
 (c++)"litehtml::line_box::finish(bool)@Base" 0.5
 (c++)"litehtml::line_box::y_shift(int)@Base" 0.5
 (c++)"litehtml::line_box::new_width(int, int, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&)@Base" 0.5
 (c++)"litehtml::line_box::~line_box()@Base" 0.5
 (c++)"litehtml::t_strtod(char const*, char**)@Base" 0.6
 (c++)"litehtml::block_box::add_element(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::block_box::get_elements(std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&)@Base" 0.5
 (c++)"litehtml::block_box::finish(bool)@Base" 0.5
 (c++)"litehtml::block_box::y_shift(int)@Base" 0.5
 (c++)"litehtml::block_box::new_width(int, int, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >&)@Base" 0.5
 (c++)"litehtml::block_box::~block_box()@Base" 0.5
 (c++)"litehtml::el_anchor::apply_stylesheet(litehtml::css const&)@Base" 0.5
 (c++)"litehtml::el_anchor::on_click()@Base" 0.5
 (c++)"litehtml::el_anchor::el_anchor(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_anchor::~el_anchor()@Base" 0.5
 (c++)"litehtml::el_before::~el_before()@Base" 0.5
 (c++)"litehtml::el_script::appendChild(std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++)"litehtml::el_script::parse_attributes()@Base" 0.5
 (c++)"litehtml::el_script::el_script(std::shared_ptr<litehtml::document> const&)@Base" 0.5
 (c++)"litehtml::el_script::~el_script()@Base" 0.5
 (c++)"litehtml::web_color::from_string(char const*, litehtml::document_container*)@Base" 0.5
 (c++)"litehtml::web_color::resolve_name[abi:cxx11](char const*, litehtml::document_container*)@Base" 0.5
 (c++)"litehtml::web_color::is_color(char const*)@Base" 0.5
 (c++)"litehtml::operator<<(std::basic_ostream<char, std::char_traits<char> >&, litehtml::tstring_view)@Base" 0.6
 (c++)"litehtml::el_comment::is_comment() const@Base" 0.6
 (c++)"litehtml::media_query::check(litehtml::media_features const&) const@Base" 0.5
 (c++)"litehtml::css_selector::add_media_to_doc(litehtml::document*) const@Base" 0.5
 (c++)"litehtml::document_container::resolve_color(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 0.5
 (c++)"litehtml::media_query_expression::check(litehtml::media_features const&) const@Base" 0.5
 (c++)"litehtml::el_body::is_body() const@Base" 0.5
 (c++)"litehtml::el_text::get_display() const@Base" 0.5
 (c++)"litehtml::el_text::line_height() const@Base" 0.5
 (c++)"litehtml::el_text::get_css_offsets() const@Base" 0.5
 (c++)"litehtml::el_text::get_white_space() const@Base" 0.5
 (c++)"litehtml::el_text::get_style_property(char const*, bool, char const*) const@Base" 0.6
 (c++)"litehtml::el_text::get_element_position(litehtml::css_offsets*) const@Base" 0.5
 (c++)"litehtml::element::calc_width(int) const@Base" 0.5
 (c++)"litehtml::element::get_zindex() const@Base" 0.5
 (c++)"litehtml::element::is_comment() const@Base" 0.6
 (c++)"litehtml::element::get_css_top() const@Base" 0.5
 (c++)"litehtml::element::get_display() const@Base" 0.5
 (c++)"litehtml::element::get_tagName() const@Base" 0.5
 (c++)"litehtml::element::is_ancestor(std::shared_ptr<litehtml::element> const&) const@Base" 0.5
 (c++)"litehtml::element::is_replaced() const@Base" 0.5
 (c++)"litehtml::element::line_height() const@Base" 0.5
 (c++)"litehtml::element::get_css_left() const@Base" 0.5
 (c++)"litehtml::element::get_overflow() const@Base" 0.5
 (c++)"litehtml::element::is_nth_child(std::shared_ptr<litehtml::element> const&, int, int, bool) const@Base" 0.5
 (c++)"litehtml::element::get_css_right() const@Base" 0.5
 (c++)"litehtml::element::get_css_width() const@Base" 0.5
 (c++)"litehtml::element::get_font_size() const@Base" 0.5
 (c++)"litehtml::element::get_placement() const@Base" 0.5
 (c++)"litehtml::element::is_inline_box() const@Base" 0.5
 (c++)"litehtml::element::is_only_child(std::shared_ptr<litehtml::element> const&, bool) const@Base" 0.5
 (c++)"litehtml::element::is_table_skip() const@Base" 0.6
 (c++)"litehtml::element::get_css_bottom() const@Base" 0.5
 (c++)"litehtml::element::get_css_height() const@Base" 0.5
 (c++)"litehtml::element::get_visibility() const@Base" 0.5
 (c++)"litehtml::element::is_white_space() const@Base" 0.5
 (c++)"litehtml::element::get_css_offsets() const@Base" 0.5
 (c++)"litehtml::element::get_white_space() const@Base" 0.5
 (c++)"litehtml::element::is_floats_holder() const@Base" 0.5
 (c++)"litehtml::element::get_floats_height(litehtml::element_float) const@Base" 0.5
 (c++)"litehtml::element::have_inline_child() const@Base" 0.5
 (c++)"litehtml::element::is_nth_last_child(std::shared_ptr<litehtml::element> const&, int, int, bool) const@Base" 0.5
 (c++)"litehtml::element::get_children_count() const@Base" 0.5
 (c++)"litehtml::element::get_style_property(char const*, bool, char const*) const@Base" 0.6
 (c++)"litehtml::element::get_vertical_align() const@Base" 0.5
 (c++)"litehtml::element::collapse_top_margin() const@Base" 0.5
 (c++)"litehtml::element::get_element_position(litehtml::css_offsets*) const@Base" 0.5
 (c++)"litehtml::element::get_predefined_height(int&) const@Base" 0.5
 (c++)"litehtml::element::is_first_child_inline(std::shared_ptr<litehtml::element> const&) const@Base" 0.5
 (c++)"litehtml::element::collapse_bottom_margin() const@Base" 0.5
 (c++)"litehtml::element::get_left_floats_height() const@Base" 0.5
 (c++)"litehtml::element::get_right_floats_height() const@Base" 0.5
 (c++)"litehtml::element::is_body() const@Base" 0.5
 (c++)"litehtml::element::get_attr(char const*, char const*) const@Base" 0.6
 (c++)"litehtml::element::is_break() const@Base" 0.5
 (c++)"litehtml::element::is_space() const@Base" 0.6
 (c++)"litehtml::element::get_child(int) const@Base" 0.5
 (c++)"litehtml::element::get_clear() const@Base" 0.5
 (c++)"litehtml::element::get_float() const@Base" 0.5
 (c++)"litehtml::document::width() const@Base" 0.5
 (c++)"litehtml::document::height() const@Base" 0.5
 (c++)"litehtml::document::cvt_units(char const*, int, bool*) const@Base" 0.5
 (c++)"litehtml::document::cvt_units(litehtml::css_length&, int, int) const@Base" 0.5
 (c++)"litehtml::el_break::is_break() const@Base" 0.5
 (c++)"litehtml::el_image::is_replaced() const@Base" 0.5
 (c++)"litehtml::el_image::line_height() const@Base" 0.5
 (c++)"litehtml::el_space::is_white_space() const@Base" 0.5
 (c++)"litehtml::el_space::is_break() const@Base" 0.5
 (c++)"litehtml::el_space::is_space() const@Base" 0.6
 (c++)"litehtml::el_style::get_tagName() const@Base" 0.5
 (c++)"litehtml::html_tag::get_zindex() const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_top() const@Base" 0.5
 (c++)"litehtml::html_tag::get_display() const@Base" 0.5
 (c++)"litehtml::html_tag::get_tagName() const@Base" 0.5
 (c++)"litehtml::html_tag::is_replaced() const@Base" 0.5
 (c++)"litehtml::html_tag::line_height() const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_left() const@Base" 0.5
 (c++)"litehtml::html_tag::get_overflow() const@Base" 0.5
 (c++)"litehtml::html_tag::is_nth_child(std::shared_ptr<litehtml::element> const&, int, int, bool) const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_right() const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_width() const@Base" 0.5
 (c++)"litehtml::html_tag::get_font_size() const@Base" 0.5
 (c++)"litehtml::html_tag::is_only_child(std::shared_ptr<litehtml::element> const&, bool) const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_bottom() const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_height() const@Base" 0.5
 (c++)"litehtml::html_tag::get_visibility() const@Base" 0.5
 (c++)"litehtml::html_tag::is_white_space() const@Base" 0.5
 (c++)"litehtml::html_tag::get_cleared_top(std::shared_ptr<litehtml::element> const&, int) const@Base" 0.5
 (c++)"litehtml::html_tag::get_css_offsets() const@Base" 0.5
 (c++)"litehtml::html_tag::get_white_space() const@Base" 0.5
 (c++)"litehtml::html_tag::is_floats_holder() const@Base" 0.5
 (c++)"litehtml::html_tag::get_floats_height(litehtml::element_float) const@Base" 0.5
 (c++)"litehtml::html_tag::have_inline_child() const@Base" 0.5
 (c++)"litehtml::html_tag::is_nth_last_child(std::shared_ptr<litehtml::element> const&, int, int, bool) const@Base" 0.5
 (c++)"litehtml::html_tag::get_children_count() const@Base" 0.5
 (c++)"litehtml::html_tag::get_style_property(char const*, bool, char const*) const@Base" 0.6
 (c++)"litehtml::html_tag::get_vertical_align() const@Base" 0.5
 (c++)"litehtml::html_tag::get_element_position(litehtml::css_offsets*) const@Base" 0.5
 (c++)"litehtml::html_tag::is_first_child_inline(std::shared_ptr<litehtml::element> const&) const@Base" 0.5
 (c++)"litehtml::html_tag::get_left_floats_height() const@Base" 0.5
 (c++)"litehtml::html_tag::get_right_floats_height() const@Base" 0.5
 (c++)"litehtml::html_tag::is_body() const@Base" 0.5
 (c++)"litehtml::html_tag::get_attr(char const*, char const*) const@Base" 0.6
 (c++)"litehtml::html_tag::is_break() const@Base" 0.5
 (c++)"litehtml::html_tag::get_child(int) const@Base" 0.5
 (c++)"litehtml::html_tag::get_clear() const@Base" 0.5
 (c++)"litehtml::html_tag::get_float() const@Base" 0.5
 (c++)"litehtml::line_box::top_margin() const@Base" 0.6
 (c++)"litehtml::line_box::bottom_margin() const@Base" 0.6
 (c++)"litehtml::line_box::is_break_only() const@Base" 0.6
 (c++)"litehtml::line_box::have_last_space() const@Base" 0.6
 (c++)"litehtml::line_box::width() const@Base" 0.6
 (c++)"litehtml::line_box::height() const@Base" 0.6
 (c++)"litehtml::line_box::baseline() const@Base" 0.6
 (c++)"litehtml::line_box::can_hold(std::shared_ptr<litehtml::element> const&, litehtml::white_space) const@Base" 0.6
 (c++)"litehtml::line_box::get_type() const@Base" 0.6
 (c++)"litehtml::line_box::is_empty() const@Base" 0.6
 (c++)"litehtml::block_box::top_margin() const@Base" 0.6
 (c++)"litehtml::block_box::bottom_margin() const@Base" 0.6
 (c++)"litehtml::block_box::width() const@Base" 0.6
 (c++)"litehtml::block_box::height() const@Base" 0.6
 (c++)"litehtml::block_box::baseline() const@Base" 0.6
 (c++)"litehtml::block_box::can_hold(std::shared_ptr<litehtml::element> const&, litehtml::white_space) const@Base" 0.6
 (c++)"litehtml::block_box::get_type() const@Base" 0.6
 (c++)"litehtml::block_box::is_empty() const@Base" 0.6
 (c++)"litehtml::el_script::get_tagName() const@Base" 0.5
 (c++|optional=templinst)"std::shared_ptr<litehtml::css_selector>::shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::media_query_list>, char const (&) [1]>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::media_query_list>&&, char const (&) [1])@Base" 0.6
 (c++|optional=templinst|arch=arm64)"std::__weak_ptr<litehtml::element, (__gnu_cxx::_Lock_policy)2>::_M_assign(litehtml::element*, std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)@Base" 0.6
 (c++|optional=templinst|arch=i386)"std::shared_ptr<litehtml::element>* std::__copy_move<true, false, std::random_access_iterator_tag>::__copy_m<std::shared_ptr<litehtml::element>*, std::shared_ptr<litehtml::element>*>(std::shared_ptr<litehtml::element>*, std::shared_ptr<litehtml::element>*, std::shared_ptr<litehtml::element>*)@Base" 0.6
 (c++|optional=templinst)"std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> >::~unique_ptr()@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::el_li, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::el_div, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::el_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::el_body, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::el_font, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::html_tag, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst|arch=!arm64)"std::__shared_ptr<litehtml::el_script, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, std::shared_ptr<litehtml::document>&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, std::shared_ptr<litehtml::document>&)@Base" 0.6
 (c++|optional=templinst)"std::_Function_base::~_Function_base()@Base" 0.6
 (c++|optional=templinst)"std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__weak_count<(__gnu_cxx::_Lock_policy)2> const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()@Base" 0.5
 (c++|optional=templinst|arch=!arm64)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_weak_release()@Base" 0.6
 (c++|optional=templinst|arch=!i386)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold()@Base" 0.6
 (c++|optional=templinst|subst)"std::_Temporary_buffer<__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, std::shared_ptr<litehtml::element> >::_Temporary_buffer(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, {c++:ssize_t})@Base" 0.5
 (c++|optional=templinst)"std::_Temporary_buffer<__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, std::shared_ptr<litehtml::element> >::~_Temporary_buffer()@Base" 0.5
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 0.6
 (c++|optional=templinst)"std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()@Base" 0.6
 (c++|optional=templinst)"std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, litehtml::property_value, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 0.6
 (c++|optional=templinst)"std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::map(std::initializer_list<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)@Base" 0.5
 (c++|optional=templinst)"std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~map()@Base" 0.5
 (c++|optional=templinst)"std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~pair()@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> >::_M_realloc_insert<litehtml::table_cell const&>(__gnu_cxx::__normal_iterator<litehtml::table_cell*, std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> > >, litehtml::table_cell const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> >::_M_realloc_insert<litehtml::table_cell>(__gnu_cxx::__normal_iterator<litehtml::table_cell*, std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> > >, litehtml::table_cell&&)@Base" 0.5
 (c++|optional=templinst)"std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> >::~vector()@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::floated_box, std::allocator<litehtml::floated_box> >::emplace_back<litehtml::floated_box>(litehtml::floated_box&&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::floated_box, std::allocator<litehtml::floated_box> >::_M_realloc_insert<litehtml::floated_box const&>(__gnu_cxx::__normal_iterator<litehtml::floated_box*, std::vector<litehtml::floated_box, std::allocator<litehtml::floated_box> > >, litehtml::floated_box const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::floated_box, std::allocator<litehtml::floated_box> >::_M_realloc_insert<litehtml::floated_box>(__gnu_cxx::__normal_iterator<litehtml::floated_box*, std::vector<litehtml::floated_box, std::allocator<litehtml::floated_box> > >, litehtml::floated_box&&)@Base" 0.5
 (c++|optional=templinst)"std::vector<litehtml::floated_box, std::allocator<litehtml::floated_box> >::~vector()@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::table_column, std::allocator<litehtml::table_column> >::_M_realloc_insert<litehtml::table_column>(__gnu_cxx::__normal_iterator<litehtml::table_column*, std::vector<litehtml::table_column, std::allocator<litehtml::table_column> > >, litehtml::table_column&&)@Base" 0.6
 (c++|optional=templinst)"void std::vector<litehtml::elements_iterator::stack_item, std::allocator<litehtml::elements_iterator::stack_item> >::_M_realloc_insert<litehtml::elements_iterator::stack_item const&>(__gnu_cxx::__normal_iterator<litehtml::elements_iterator::stack_item*, std::vector<litehtml::elements_iterator::stack_item, std::allocator<litehtml::elements_iterator::stack_item> > >, litehtml::elements_iterator::stack_item const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::css_attribute_selector, std::allocator<litehtml::css_attribute_selector> >::_M_realloc_insert<litehtml::css_attribute_selector const&>(__gnu_cxx::__normal_iterator<litehtml::css_attribute_selector*, std::vector<litehtml::css_attribute_selector, std::allocator<litehtml::css_attribute_selector> > >, litehtml::css_attribute_selector const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::media_query_expression, std::allocator<litehtml::media_query_expression> >::_M_realloc_insert<litehtml::media_query_expression const&>(__gnu_cxx::__normal_iterator<litehtml::media_query_expression*, std::vector<litehtml::media_query_expression, std::allocator<litehtml::media_query_expression> > >, litehtml::media_query_expression const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::css_text, std::allocator<litehtml::css_text> >::_M_realloc_insert<litehtml::css_text>(__gnu_cxx::__normal_iterator<litehtml::css_text*, std::vector<litehtml::css_text, std::allocator<litehtml::css_text> > >, litehtml::css_text&&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::position, std::allocator<litehtml::position> >::_M_realloc_insert<litehtml::position const&>(__gnu_cxx::__normal_iterator<litehtml::position*, std::vector<litehtml::position, std::allocator<litehtml::position> > >, litehtml::position const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<litehtml::table_row, std::allocator<litehtml::table_row> >::_M_realloc_insert<litehtml::table_row>(__gnu_cxx::__normal_iterator<litehtml::table_row*, std::vector<litehtml::table_row, std::allocator<litehtml::table_row> > >, litehtml::table_row&&)@Base" 0.5
 (c++|optional=templinst|arch=!i386)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 0.5
 (c++|optional=templinst|subst)"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_default_append({c++:size_t})@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 0.5
 (c++|optional=templinst)"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()@Base" 0.5
 (c++|optional=templinst)"std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::~vector()@Base" 0.6
 (c++|optional=templinst)"void std::vector<litehtml::table_column*, std::allocator<litehtml::table_column*> >::_M_realloc_insert<litehtml::table_column*>(__gnu_cxx::__normal_iterator<litehtml::table_column**, std::vector<litehtml::table_column*, std::allocator<litehtml::table_column*> > >, litehtml::table_column*&&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> >, std::allocator<std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> > > >::_M_realloc_insert<std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> > const&>(__gnu_cxx::__normal_iterator<std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> >*, std::vector<std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> >, std::allocator<std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> > > > >, std::vector<litehtml::table_cell, std::allocator<litehtml::table_cell> > const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::shared_ptr<litehtml::media_query>, std::allocator<std::shared_ptr<litehtml::media_query> > >::_M_realloc_insert<std::shared_ptr<litehtml::media_query> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::media_query>*, std::vector<std::shared_ptr<litehtml::media_query>, std::allocator<std::shared_ptr<litehtml::media_query> > > >, std::shared_ptr<litehtml::media_query> const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::shared_ptr<litehtml::css_selector>, std::allocator<std::shared_ptr<litehtml::css_selector> > >::_M_realloc_insert<std::shared_ptr<litehtml::css_selector> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::css_selector>*, std::vector<std::shared_ptr<litehtml::css_selector>, std::allocator<std::shared_ptr<litehtml::css_selector> > > >, std::shared_ptr<litehtml::css_selector> const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::shared_ptr<litehtml::media_query_list>, std::allocator<std::shared_ptr<litehtml::media_query_list> > >::_M_realloc_insert<std::shared_ptr<litehtml::media_query_list> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::media_query_list>*, std::vector<std::shared_ptr<litehtml::media_query_list>, std::allocator<std::shared_ptr<litehtml::media_query_list> > > >, std::shared_ptr<litehtml::media_query_list> const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >::_M_realloc_insert<std::shared_ptr<litehtml::element> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >::_M_realloc_insert<std::shared_ptr<litehtml::element> >(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, std::shared_ptr<litehtml::element>&&)@Base" 0.6
 (c++|optional=templinst)"std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >::insert(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element> const*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, std::shared_ptr<litehtml::element> const&)@Base" 0.5
 (c++|optional=templinst)"std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > >::~vector()@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> >, std::allocator<std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> > > >::_M_realloc_insert<std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> >*, std::vector<std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> >, std::allocator<std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> > > > >, std::unique_ptr<litehtml::used_selector, std::default_delete<litehtml::used_selector> >&&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> >, std::allocator<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> > > >::_M_realloc_insert<std::unique_ptr<litehtml::line_box, std::default_delete<litehtml::line_box> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> >*, std::vector<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> >, std::allocator<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> > > > >, std::unique_ptr<litehtml::line_box, std::default_delete<litehtml::line_box> >&&)@Base" 0.5
 (c++|optional=templinst)"void std::vector<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> >, std::allocator<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> > > >::_M_realloc_insert<std::unique_ptr<litehtml::block_box, std::default_delete<litehtml::block_box> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> >*, std::vector<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> >, std::allocator<std::unique_ptr<litehtml::box, std::default_delete<litehtml::box> > > > >, std::unique_ptr<litehtml::block_box, std::default_delete<litehtml::block_box> >&&)@Base" 0.5
 (c++|optional=templinst)"std::vector<char, std::allocator<char> >::vector(std::initializer_list<char>, std::allocator<char> const&)@Base" 0.6
 (c++|optional=templinst)"std::vector<char, std::allocator<char> >::~vector()@Base" 0.6
 (c++|optional=templinst)"void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> > >::_Reuse_or_alloc_node::operator()<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> const&)@Base" 0.6
 (c++|optional=templinst)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::property_value> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst|arch=!i386)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, litehtml::font_item> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst|arch=!i386)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&)@Base" 0.5
 (c++|optional=templinst)"std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_get_insert_unique_pos(int const&)@Base" 0.5
 (c++|optional=templinst|arch=!i386)"std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, int const&)@Base" 0.5
 (c++|optional=templinst)"__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > > std::__remove_if<__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<litehtml::element> const> >(__gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, __gnu_cxx::__normal_iterator<std::shared_ptr<litehtml::element>*, std::vector<std::shared_ptr<litehtml::element>, std::allocator<std::shared_ptr<litehtml::element> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<litehtml::element> const>)@Base" 0.5
 (c++|optional=templinst)"litehtml::css_text* std::__do_uninit_copy<litehtml::css_text const*, litehtml::css_text*>(litehtml::css_text const*, litehtml::css_text const*, litehtml::css_text*)@Base" 0.6
 (c++|optional=templinst)"std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >* std::__do_uninit_copy<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const*, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >*>(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const*, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const*, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >*)@Base" 0.6
 (c++|optional=templinst|subst)"void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, {c++:ssize_t}, __gnu_cxx::__ops::_Iter_comp_iter<std::less<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, {c++:ssize_t}, __gnu_cxx::__ops::_Iter_comp_iter<std::less<int> >)@Base" 0.5
 (c++|optional=templinst)"std::__throw_bad_weak_ptr()@Base" 0.5
 (c++|optional=templinst)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)@Base" 0.5
 (c++)"typeinfo for litehtml::el_comment@Base" 0.5
 (c++)"typeinfo for litehtml::go_inside_table@Base" 0.5
 (c++)"typeinfo for litehtml::go_inside_inline@Base" 0.5
 (c++)"typeinfo for litehtml::iterator_selector@Base" 0.5
 (c++)"typeinfo for litehtml::document_container@Base" 0.6
 (c++)"typeinfo for litehtml::table_rows_selector@Base" 0.5
 (c++)"typeinfo for litehtml::el_before_after_base@Base" 0.5
 (c++)"typeinfo for litehtml::table_cells_selector@Base" 0.5
 (c++)"typeinfo for litehtml::table_column_accessor@Base" 0.5
 (c++)"typeinfo for litehtml::table_column_accessor_width@Base" 0.5
 (c++)"typeinfo for litehtml::table_column_accessor_max_width@Base" 0.5
 (c++)"typeinfo for litehtml::table_column_accessor_min_width@Base" 0.5
 (c++)"typeinfo for litehtml::box@Base" 0.5
 (c++)"typeinfo for litehtml::el_li@Base" 0.6
 (c++)"typeinfo for litehtml::el_td@Base" 0.5
 (c++)"typeinfo for litehtml::el_tr@Base" 0.5
 (c++)"typeinfo for litehtml::el_div@Base" 0.5
 (c++)"typeinfo for litehtml::el_base@Base" 0.5
 (c++)"typeinfo for litehtml::el_body@Base" 0.5
 (c++)"typeinfo for litehtml::el_font@Base" 0.5
 (c++)"typeinfo for litehtml::el_link@Base" 0.5
 (c++)"typeinfo for litehtml::el_para@Base" 0.5
 (c++)"typeinfo for litehtml::el_text@Base" 0.5
 (c++)"typeinfo for litehtml::element@Base" 0.5
 (c++)"typeinfo for litehtml::document@Base" 0.5
 (c++)"typeinfo for litehtml::el_after@Base" 0.5
 (c++)"typeinfo for litehtml::el_break@Base" 0.5
 (c++)"typeinfo for litehtml::el_cdata@Base" 0.5
 (c++)"typeinfo for litehtml::el_image@Base" 0.5
 (c++)"typeinfo for litehtml::el_space@Base" 0.5
 (c++)"typeinfo for litehtml::el_style@Base" 0.5
 (c++)"typeinfo for litehtml::el_table@Base" 0.5
 (c++)"typeinfo for litehtml::el_title@Base" 0.5
 (c++)"typeinfo for litehtml::html_tag@Base" 0.5
 (c++)"typeinfo for litehtml::line_box@Base" 0.5
 (c++)"typeinfo for litehtml::block_box@Base" 0.5
 (c++)"typeinfo for litehtml::el_anchor@Base" 0.5
 (c++)"typeinfo for litehtml::el_before@Base" 0.5
 (c++)"typeinfo for litehtml::el_script@Base" 0.5
 (c++|optional=templinst)"typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>@Base" 0.5
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>@Base" 0.5
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo for std::enable_shared_from_this<litehtml::element>@Base" 0.5
 (c++|optional=templinst)"typeinfo for std::enable_shared_from_this<litehtml::document>@Base" 0.5
 (c++)"typeinfo name for litehtml::el_comment@Base" 0.5
 (c++)"typeinfo name for litehtml::go_inside_table@Base" 0.5
 (c++)"typeinfo name for litehtml::go_inside_inline@Base" 0.5
 (c++)"typeinfo name for litehtml::iterator_selector@Base" 0.5
 (c++)"typeinfo name for litehtml::document_container@Base" 0.6
 (c++)"typeinfo name for litehtml::table_rows_selector@Base" 0.5
 (c++)"typeinfo name for litehtml::el_before_after_base@Base" 0.5
 (c++)"typeinfo name for litehtml::table_cells_selector@Base" 0.5
 (c++)"typeinfo name for litehtml::table_column_accessor@Base" 0.5
 (c++)"typeinfo name for litehtml::table_column_accessor_width@Base" 0.5
 (c++)"typeinfo name for litehtml::table_column_accessor_max_width@Base" 0.5
 (c++)"typeinfo name for litehtml::table_column_accessor_min_width@Base" 0.5
 (c++)"typeinfo name for litehtml::box@Base" 0.5
 (c++)"typeinfo name for litehtml::el_li@Base" 0.6
 (c++)"typeinfo name for litehtml::el_td@Base" 0.5
 (c++)"typeinfo name for litehtml::el_tr@Base" 0.5
 (c++)"typeinfo name for litehtml::el_div@Base" 0.5
 (c++)"typeinfo name for litehtml::el_base@Base" 0.5
 (c++)"typeinfo name for litehtml::el_body@Base" 0.5
 (c++)"typeinfo name for litehtml::el_font@Base" 0.5
 (c++)"typeinfo name for litehtml::el_link@Base" 0.5
 (c++)"typeinfo name for litehtml::el_para@Base" 0.5
 (c++)"typeinfo name for litehtml::el_text@Base" 0.5
 (c++)"typeinfo name for litehtml::element@Base" 0.5
 (c++)"typeinfo name for litehtml::document@Base" 0.5
 (c++)"typeinfo name for litehtml::el_after@Base" 0.5
 (c++)"typeinfo name for litehtml::el_break@Base" 0.5
 (c++)"typeinfo name for litehtml::el_cdata@Base" 0.5
 (c++)"typeinfo name for litehtml::el_image@Base" 0.5
 (c++)"typeinfo name for litehtml::el_space@Base" 0.5
 (c++)"typeinfo name for litehtml::el_style@Base" 0.5
 (c++)"typeinfo name for litehtml::el_table@Base" 0.5
 (c++)"typeinfo name for litehtml::el_title@Base" 0.5
 (c++)"typeinfo name for litehtml::html_tag@Base" 0.5
 (c++)"typeinfo name for litehtml::line_box@Base" 0.5
 (c++)"typeinfo name for litehtml::block_box@Base" 0.5
 (c++)"typeinfo name for litehtml::el_anchor@Base" 0.5
 (c++)"typeinfo name for litehtml::el_before@Base" 0.5
 (c++)"typeinfo name for litehtml::el_script@Base" 0.5
 (c++|optional=templinst)"typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>@Base" 0.5
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>@Base" 0.5
 (c++|optional=templinst)"typeinfo name for std::_Sp_make_shared_tag@Base" 0.5
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"typeinfo name for std::enable_shared_from_this<litehtml::element>@Base" 0.5
 (c++|optional=templinst)"typeinfo name for std::enable_shared_from_this<litehtml::document>@Base" 0.5
 (c++)"vtable for litehtml::el_comment@Base" 0.5
 (c++)"vtable for litehtml::go_inside_table@Base" 0.5
 (c++)"vtable for litehtml::go_inside_inline@Base" 0.5
 (c++)"vtable for litehtml::document_container@Base" 0.6
 (c++)"vtable for litehtml::table_rows_selector@Base" 0.5
 (c++)"vtable for litehtml::el_before_after_base@Base" 0.5
 (c++)"vtable for litehtml::table_cells_selector@Base" 0.5
 (c++)"vtable for litehtml::table_column_accessor_width@Base" 0.5
 (c++)"vtable for litehtml::table_column_accessor_max_width@Base" 0.5
 (c++)"vtable for litehtml::table_column_accessor_min_width@Base" 0.5
 (c++)"vtable for litehtml::el_li@Base" 0.6
 (c++)"vtable for litehtml::el_td@Base" 0.5
 (c++)"vtable for litehtml::el_tr@Base" 0.5
 (c++)"vtable for litehtml::el_div@Base" 0.5
 (c++)"vtable for litehtml::el_base@Base" 0.5
 (c++)"vtable for litehtml::el_body@Base" 0.5
 (c++)"vtable for litehtml::el_font@Base" 0.5
 (c++)"vtable for litehtml::el_link@Base" 0.5
 (c++)"vtable for litehtml::el_para@Base" 0.5
 (c++)"vtable for litehtml::el_text@Base" 0.5
 (c++)"vtable for litehtml::element@Base" 0.5
 (c++)"vtable for litehtml::document@Base" 0.5
 (c++)"vtable for litehtml::el_after@Base" 0.5
 (c++)"vtable for litehtml::el_break@Base" 0.5
 (c++)"vtable for litehtml::el_cdata@Base" 0.5
 (c++)"vtable for litehtml::el_image@Base" 0.5
 (c++)"vtable for litehtml::el_space@Base" 0.5
 (c++)"vtable for litehtml::el_style@Base" 0.5
 (c++)"vtable for litehtml::el_table@Base" 0.5
 (c++)"vtable for litehtml::el_title@Base" 0.5
 (c++)"vtable for litehtml::html_tag@Base" 0.5
 (c++)"vtable for litehtml::line_box@Base" 0.5
 (c++)"vtable for litehtml::block_box@Base" 0.5
 (c++)"vtable for litehtml::el_anchor@Base" 0.5
 (c++)"vtable for litehtml::el_before@Base" 0.5
 (c++)"vtable for litehtml::el_script@Base" 0.5
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_comment, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::media_query, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::css_selector, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::media_query_list, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_li, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_td, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_tr, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_div, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_base, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_body, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_font, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_link, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_para, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_text, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::document, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_after, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_break, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_cdata, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_image, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_space, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_style, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_table, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_title, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::html_tag, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_anchor, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_before, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"vtable for std::_Sp_counted_ptr_inplace<litehtml::el_script, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 0.6
 (c++|optional=templinst)"std::_Sp_make_shared_tag::_S_ti()::__tag@Base" 0.5
 (c++|optional=templinst)"std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits@Base" 0.6
